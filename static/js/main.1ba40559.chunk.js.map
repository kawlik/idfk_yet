{"version":3,"sources":["store/store.jsx","component/Shapes.jsx","component/Board.jsx","App.jsx","index.js"],"names":["StoreContext","createContext","initPlayer","x","y","w","r","o","StoreProvider","children","useState","score","setScore","high","setHigh","player","setPlayer","storeValue","spikes","setSpikes","Provider","value","Player","idName","side","useContext","translate","rotate","transform","useEffect","elem","document","querySelector","offsetLeft","offsetWidth","offsetTop","offsetHeight","className","id","style","SpikeLeft","prev","slice","SpikeRight","SpikesTop","Board","setSide","stop","setStop","btn","gameSpikes","setGameSpikes","collision","setCollision","isCollision","forEach","spike","x1","x2","y1","y2","Math","sqrt","SQRT2","textContent","interval","setInterval","Boolean","floor","random","addNewSpike","clearInterval","updatedSpikes","window","innerHeight","addMove","r_curr","r_high","onClick","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ba40559.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst StoreContext = createContext(null);\n\nconst initPlayer = { x: 0, y: 0, w: 0, r: 0, o: 0 };\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst StoreProvider = ({ children }) => {\n\n    const [ score, setScore ] = useState(2);\n    const [ high, setHigh ] = useState(0);\n\n    const [ player, setPlayer ] = useState(initPlayer);\n    const [ spikes, setSpikes ] = useState([]);\n\n    \n    /*   *   *   *   *   *   *   *   *   *   */\n\n    const unwrapCookies = cookies => {\n        const highScore = cookies.filter(elem => elem.startsWith('highScore')).pop();\n        return +highScore.slice(10);\n    }\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    const storeValue = {\n        high, setHigh,\n        score, setScore,\n        player, setPlayer,\n        spikes, setSpikes,\n    };\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    /*\n\n    useEffect(() => {\n\n        const prev = unwrapCookies(document.cookie.split(/; * /));\n        setHigh(prev);\n\n    }, [])\n\n    useEffect(() => {\n\n        const prev = unwrapCookies(document.cookie.split(/; * /));\n        const curr = score;\n\n        if(curr > prev) {\n            document.cookie = `highScore=${curr}`;\n            setHigh(curr);\n        }\n\n\n    }, [ score ])\n\n    */\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    return(\n        <StoreContext.Provider value={storeValue}>\n            {children}\n        </StoreContext.Provider>\n)}\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nexport default StoreProvider;\nexport { StoreContext, StoreProvider };","import React, { useContext, useEffect } from 'react';\n\nimport { StoreContext } from '../store/store';\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst Player = ({ idName, side }) => {\n\n    const { player, setPlayer } = useContext(StoreContext);\n\n    const translate = side ? player.o - player.r : 0;\n    const rotate = side ? 90 : 0;\n\n    const transform = `translateX(${-translate}px) rotate(${-rotate}deg)`;\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        const { y, w, r, o } = player;\n        const x = o - translate;\n\n        setPlayer({ x, y, w, r, o });\n\n    }, [side]);\n\n    useEffect(() => {\n\n        const elem = document.querySelector('.player');\n\n        const x = elem.offsetLeft + elem.offsetWidth/2;\n        const y = elem.offsetTop + elem.offsetHeight/2;\n\n        const w = elem.offsetWidth;\n        const r = w / 2;\n        const o = x;\n\n        setPlayer({ x, y, w, r, o });\n\n    }, []);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <div className='player' id={idName} style={{transform: transform}}><span></span></div>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst SpikeLeft = () => {\n\n    const { setSpikes } = useContext(StoreContext);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        const elem = document.querySelector('.spike');\n\n        const x = elem.offsetLeft + elem.offsetWidth/2;\n        const y = elem.offsetTop + elem.offsetHeight/2;\n        const r = elem.offsetWidth / 2;\n\n        setSpikes(prev => [ { x, y, r }, ...prev.slice(0, 19) ]);\n\n    }, []);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <div className='spike __left'></div>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst SpikeRight = () => {\n\n    const { setSpikes } = useContext(StoreContext);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        const elem = document.querySelector('.spike');\n\n        const x = elem.offsetLeft + elem.offsetWidth/2;\n        const y = elem.offsetTop + elem.offsetHeight/2;\n        const r = elem.offsetWidth / 2;\n\n        setSpikes(prev => [ { x, y, r }, ...prev.slice(0, 19) ]);\n\n    }, []);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <div className='spike __right'></div>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst SpikesTop = () => {\n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <div className='spikes-top'>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n    </div>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nexport { Player, SpikeLeft, SpikeRight, SpikesTop };","import React, { useContext, useEffect, useState } from 'react';\n\nimport { FaPlay, FaPause } from 'react-icons/fa';\n\nimport { StoreContext } from '../store/store';\n\nimport { Player, SpikeLeft, SpikeRight, SpikesTop } from './Shapes';\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst Board = () => {\n    \n    const { high } = useContext(StoreContext);\n    const { player } = useContext(StoreContext);\n    const { spikes } = useContext(StoreContext);\n\n    const { setHigh } = useContext(StoreContext);\n    const { setScore } = useContext(StoreContext);\n    const { setSpikes } = useContext(StoreContext);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    const [ side, setSide ] = useState(false);\n    const changeSide = () => setSide(prev => !prev);\n\n    const [ stop, setStop ] = useState(true);\n    const toggleStop = () => setStop(prev => !prev);\n\n\n    let score = 0;\n    const btn = stop ? 'btn start' : 'btn stop';\n    const refresh = 200;\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    const [ gameSpikes, setGameSpikes ] = useState([]);\n\n    const addNewSpike = () => {\n        const spike = Boolean(Math.floor(Math.random()*2))\n        ? <SpikeLeft key={score}/>\n        : <SpikeRight key={score}/>\n\n        score++;\n        document.querySelector('.curr').textContent = score;\n\n        setGameSpikes(prev => [ spike, ...prev.slice(0, 19) ]);\n    }\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    const [ collision, setCollision ] = useState(false);\n\n    const getDistance = ( x1, x2, y1, y2 ) => {\n        return Math.sqrt( (x1 - x2)**2 + (y1 - y2)**2 );\n    }\n\n    const addMove = () => {\n        const updatedSpikes = [...spikes];\n        \n        updatedSpikes.forEach(spike => {\n            spike.y += window.innerHeight / (Math.SQRT2*refresh);\n        });\n\n        isCollision();\n\n        setSpikes(updatedSpikes);\n    }\n\n    const isCollision = () => {\n        const collisionDetected = false;\n        spikes.forEach(spike => {\n            const d = getDistance( spike.x, player.x, spike.y, player.y );\n            const r = spike.r + player.r;\n\n            if(d < (r / Math.SQRT2) && (spike.y + player.w/2) < player.y) {\n                setCollision(true);\n                setStop(true);\n            }\n        });\n    }\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        if(!stop) {\n            document.querySelector('.curr').textContent = score;\n            const interval = setInterval(() => addNewSpike(), 1000 * 50 / (score + 50));\n            return(() => {clearInterval(interval); setScore(score);});\n        }\n\n        if(stop) {\n            setSpikes([]);\n            setGameSpikes([]);\n        }\n\n    }, [ stop, collision ])\n\n    useEffect(() => {\n\n        if(!stop) {\n            const interval = setInterval(() => addMove(), 1000 / refresh);\n            return(() => clearInterval(interval));\n        }\n\n    }, [ stop, spikes ])\n\n    useEffect(() => {\n\n        const r_curr = document.querySelector('.curr');\n        const r_high = document.querySelector('.high');\n\n        r_curr.textContent = score;\n        r_high.textContent = high;\n\n    }, [ stop, high ])\n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <section className='board' onClick={!stop ? changeSide : null}>\n\n        <span className='curr'></span>\n        <span className='high'></span>\n\n        <button className={btn} onClick={toggleStop}>\n            {stop ? <FaPlay/> : <FaPause/>}\n        </button>\n\n        <Player idName='player' side={side}/>\n\n        <SpikesTop/>\n\n        {gameSpikes}\n\n    </section>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nexport default Board;","import React from 'react';\n\nimport StoreProvider from './store/store'\n\nimport Board from './component/Board';\n\nimport './style/main.scss';\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst App = () => {    \n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <StoreProvider>\n        <Board/>\n    </StoreProvider>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nReactDOM.render(\n    <React.StrictMode><App/></React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}