{"version":3,"sources":["store/store.jsx","component/Shapes.jsx","component/Board.jsx","App.jsx","index.js"],"names":["StoreContext","createContext","initPlayer","x","y","w","r","o","StoreProvider","children","useState","score","setScore","player","setPlayer","spikes","setSpikes","useEffect","storeValue","Provider","value","Player","idName","side","useContext","translate","rotate","transform","elem","document","querySelector","offsetLeft","offsetWidth","offsetTop","offsetHeight","className","id","style","SpikeLeft","prev","slice","console","log","SpikeRight","SpikesTop","Board","setSide","addNewSpike","setAddNewSpike","inGameSpikes","setInGameSpikes","stop","setStop","setTimeout","newSpike","Boolean","Math","floor","random","addRandSpike","onClick","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f36c095.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst StoreContext = createContext(null);\n\nconst initPlayer = { x: 0, y: 0, w: 0, r: 0, o: 0 };\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst StoreProvider = ({ children }) => {\n\n    const [ score, setScore ] = useState(0);\n\n    const [ player, setPlayer ] = useState(initPlayer);\n    const [ spikes, setSpikes ] = useState([]);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n    }, []);\n    \n    /*   *   *   *   *   *   *   *   *   *   */\n\n    const storeValue = {\n        score, setScore,\n        player, setPlayer,\n        spikes, setSpikes,\n    };\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    return(\n        <StoreContext.Provider value={storeValue}>\n            {children}\n        </StoreContext.Provider>\n)}\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nexport default StoreProvider;\nexport { StoreContext, StoreProvider };","import React, { useContext, useEffect } from 'react';\n\nimport { StoreContext } from '../store/store';\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst Player = ({ idName, side }) => {\n\n    const { player, setPlayer } = useContext(StoreContext);\n\n    const translate = side ? player.o - player.r : 0;\n    const rotate = side ? 90 : 0;\n\n    const transform = `translateX(${-translate}px) rotate(${-rotate}deg)`;\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        const { y, w, r, o } = player;\n        const x = o - translate;\n\n        setPlayer({ x, y, w, r, o });\n\n    }, [side]);\n\n    useEffect(() => {\n\n        const elem = document.querySelector('.player');\n\n        const x = elem.offsetLeft + elem.offsetWidth/2;\n        const y = elem.offsetTop + elem.offsetHeight/2;\n\n        const w = elem.offsetWidth;\n        const r = w / 2;\n        const o = x;\n\n        setPlayer({ x, y, w, r, o });\n\n    }, []);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <div className='player' id={idName} style={{transform: transform}}><span></span></div>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst SpikeLeft = () => {\n\n    const { spikes, setSpikes } = useContext(StoreContext);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        const elem = document.querySelector('.spike');\n\n        const x = elem.offsetLeft + elem.offsetWidth/2;\n        const y = elem.offsetTop + elem.offsetHeight/2;\n        const r = elem.offsetWidth / 2;\n\n\n        setSpikes(prev => [ { x, y, r }, ...prev.slice(0, 19) ]);\n        console.log(spikes);\n\n    }, []);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <div className='spike __left'></div>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst SpikeRight = () => {\n\n    const { spikes, setSpikes } = useContext(StoreContext);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        const elem = document.querySelector('.spike');\n\n        const x = elem.offsetLeft + elem.offsetWidth/2;\n        const y = elem.offsetTop + elem.offsetHeight/2;\n        const r = elem.offsetWidth / 2;\n\n\n        setSpikes(prev => [ { x, y, r }, ...prev.slice(0, 19) ]);\n        console.log(spikes);\n\n    }, []);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <div className='spike __right'></div>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst SpikesTop = () => {\n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <div className='spikes-top'>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n        <div className='spike-top'></div>\n    </div>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nexport { Player, SpikeLeft, SpikeRight, SpikesTop };","import React, { useContext, useEffect, useState } from 'react';\n\nimport { StoreContext } from '../store/store';\n\nimport ParticlesBackground from './ParticlesBackground';\nimport { Player, SpikeLeft, SpikeRight, SpikesTop } from './Shapes';\n\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst Board = () => {\n\n    const [ side, setSide ] = useState(false);\n    const changeSide = () => setSide(prev => !prev);\n\n    const [ addNewSpike, setAddNewSpike ] = useState(true);\n    const [ inGameSpikes, setInGameSpikes ] = useState([]);\n    const [ score, setScore ] = useState(0);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    const [ stop, setStop ] = useState(true);\n    const toggleStop = () => setStop(prev => !prev);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    const { player } = useContext(StoreContext);\n    const { spikes } = useContext(StoreContext);\n    const { setSpikes } = useContext(StoreContext);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    const addRandSpike = () => {\n        const newSpike = Boolean(Math.floor(Math.random()*2))\n            ? <SpikeLeft key={score}/>\n            : <SpikeRight key={score}/>;\n\n            \n        setInGameSpikes(prev => [ newSpike, ...prev.slice(0, 19) ]);\n        setScore(prev => prev + 1)\n    }\n\n    /*   *   *   *   *   *   *   *   *   *   */\n\n    useEffect(() => {\n\n        if(stop) {\n            setAddNewSpike(false);\n            setInGameSpikes([]);\n            setScore(0);\n\n            setSpikes([]);\n        }\n\n        if(!stop) {\n            setTimeout(() => addRandSpike(), 500);\n            setTimeout(() => setAddNewSpike(prev => !prev), 1000 * 100 / (score + 100));\n        }\n\n    }, [addNewSpike, stop]);\n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <section className='board' onClick={!stop ? changeSide : null}>\n\n\n        <SpikesTop/>\n\n\n        <button className='start-stop' onClick={toggleStop}>[button]</button>\n\n\n        <Player idName='player' side={side}/>\n\n\n        {inGameSpikes}\n\n\n    </section>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nexport default Board;","import React from 'react';\n\nimport StoreProvider from './store/store'\n\nimport Board from './component/Board';\n\nimport './style/main.scss';\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nconst App = () => {    \n\n    /*   *   *   *   *   *   *   *   *   *   */\n    \n    return(\n    <StoreProvider>\n        <Board/>\n    </StoreProvider>\n)};\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n/*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   */\n\nReactDOM.render(\n    <React.StrictMode><App/></React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}